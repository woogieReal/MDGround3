import { ResTree } from "@/src/models/tree.model";

const mockData: ResTree[] = [
  {
    treeId: "77",
    treeType: 10,
    treeName: "javascript",
    treePath: "",
    treeChildren: [
      {
        treeId: "88",
        treeType: 20,
        treeName: "Array",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "653",
        treeType: 20,
        treeName: "정규식",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "87",
        treeType: 20,
        treeName: "Object",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "78",
        treeType: 20,
        treeName: "change element id and treeName",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "79",
        treeType: 20,
        treeName: "window.onload",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "80",
        treeType: 20,
        treeName: "window.location.reload()",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "81",
        treeType: 20,
        treeName: "async vs defer",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "82",
        treeType: 20,
        treeName: "use strict",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "83",
        treeType: 20,
        treeName: "data types: primative",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "84",
        treeType: 20,
        treeName: "Operator",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "85",
        treeType: 20,
        treeName: "Function",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "86",
        treeType: 20,
        treeName: "Class",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "89",
        treeType: 20,
        treeName: "JSON",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "90",
        treeType: 20,
        treeName: "Promise",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "91",
        treeType: 20,
        treeName: "aync & await",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "95",
        treeType: 20,
        treeName: "key event",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "317",
        treeType: 20,
        treeName: "문자열 특정문자 갯수 찾기",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "383",
        treeType: 20,
        treeName: "Optional chaining",
        treePath: "77",
        treeChildren: [],
      },
      {
        treeId: "1212",
        treeType: 20,
        treeName: "changeCommaToHash",
        treePath: "77",
        treeChildren: [],
      },
    ],
  },
  {
    treeId: "484",
    treeType: 10,
    treeName: "파이썬",
    treePath: "",
    treeChildren: [
      {
        treeId: "496",
        treeType: 10,
        treeName: "Sequence Types",
        treePath: "484",
        treeChildren: [
          {
            treeId: "487",
            treeType: 20,
            treeName: "\bSequence",
            treePath: "484|496",
            treeChildren: [],
          },
          {
            treeId: "493",
            treeType: 20,
            treeName: "List",
            treePath: "484|496",
            treeChildren: [],
          },
          {
            treeId: "494",
            treeType: 20,
            treeName: "Tuple",
            treePath: "484|496",
            treeChildren: [],
          },
          {
            treeId: "495",
            treeType: 20,
            treeName: "Range",
            treePath: "484|496",
            treeChildren: [],
          },
        ],
      },
      {
        treeId: "497",
        treeType: 10,
        treeName: "Text Sequence Type",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "501",
        treeType: 10,
        treeName: "Set Types",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "555",
        treeType: 10,
        treeName: "Mapping Types",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "575",
        treeType: 10,
        treeName: "Django",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "577",
        treeType: 10,
        treeName: "Django REST framework",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "485",
        treeType: 20,
        treeName: "파이썬이란",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "486",
        treeType: 20,
        treeName: "기본 문법",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "488",
        treeType: 20,
        treeName: "data treeType",
        treePath: "484",
        treeChildren: [],
      },
      {
        treeId: "574",
        treeType: 20,
        treeName: "pip",
        treePath: "484",
        treeChildren: [],
      },
    ],
  },
  {
    treeId: "375",
    treeType: 10,
    treeName: "mysql",
    treePath: "",
    treeChildren: [
      {
        treeId: "582",
        treeType: 10,
        treeName: "응용",
        treePath: "375",
        treeChildren: [],
      },
      {
        treeId: "671",
        treeType: 10,
        treeName: "인덱스",
        treePath: "375",
        treeChildren: [],
      },
      {
        treeId: "679",
        treeType: 10,
        treeName: "내장 함수",
        treePath: "375",
        treeChildren: [],
      },
      {
        treeId: "1093",
        treeType: 10,
        treeName: "실행계획",
        treePath: "375",
        treeChildren: [],
      },
      {
        treeId: "680",
        treeType: 10,
        treeName: "정리",
        treePath: "375",
        treeChildren: [],
      },
      {
        treeId: "1105",
        treeType: 10,
        treeName: "구문분석",
        treePath: "375",
        treeChildren: [
          {
            treeId: "1125",
            treeType: 10,
            treeName: "CREATE",
            treePath: "375|1105",
            treeChildren: [],
          },
          {
            treeId: "1126",
            treeType: 10,
            treeName: "Compound Statement",
            treePath: "375|1105",
            treeChildren: [
              {
                treeId: "1130",
                treeType: 10,
                treeName: "Flow Control Statements",
                treePath: "375|1105|1126",
                treeChildren: [
                  {
                    treeId: "1131",
                    treeType: 20,
                    treeName: "CASE",
                    treePath: "375|1105|1126|1130",
                    treeChildren: [],
                  },
                  {
                    treeId: "1132",
                    treeType: 20,
                    treeName: "IF",
                    treePath: "375|1105|1126|1130",
                    treeChildren: [],
                  },
                  {
                    treeId: "1133",
                    treeType: 20,
                    treeName: "LOOP",
                    treePath: "375|1105|1126|1130",
                    treeChildren: [],
                  },
                  {
                    treeId: "1134",
                    treeType: 20,
                    treeName: "REPEAT",
                    treePath: "375|1105|1126|1130",
                    treeChildren: [],
                  },
                  {
                    treeId: "1135",
                    treeType: 20,
                    treeName: "WHILE",
                    treePath: "375|1105|1126|1130",
                    treeChildren: [],
                  },
                ],
              },
              {
                treeId: "1138",
                treeType: 10,
                treeName: "Condition Handling",
                treePath: "375|1105|1126",
                treeChildren: [],
              },
              {
                treeId: "1127",
                treeType: 20,
                treeName: "BEGIN ... END",
                treePath: "375|1105|1126",
                treeChildren: [],
              },
              {
                treeId: "1128",
                treeType: 20,
                treeName: "Statement Labels",
                treePath: "375|1105|1126",
                treeChildren: [],
              },
              {
                treeId: "1129",
                treeType: 20,
                treeName: "DECLARE",
                treePath: "375|1105|1126",
                treeChildren: [],
              },
              {
                treeId: "1136",
                treeType: 20,
                treeName: "CURSOR",
                treePath: "375|1105|1126",
                treeChildren: [],
              },
            ],
          },
          {
            treeId: "1227",
            treeType: 10,
            treeName: "Transactional and Locking Statements",
            treePath: "375|1105",
            treeChildren: [],
          },
        ],
      },
    ],
  },
  {
    treeId: "218",
    treeType: 10,
    treeName: "AWS",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "1141",
    treeType: 10,
    treeName: "TanStack Query",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "1191",
    treeType: 10,
    treeName: "terraform",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "187",
    treeType: 10,
    treeName: "react",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "96",
    treeType: 10,
    treeName: "typescript",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "436",
    treeType: 10,
    treeName: "git",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "92",
    treeType: 10,
    treeName: "java",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "117",
    treeType: 10,
    treeName: "next",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "206",
    treeType: 10,
    treeName: "React DnD",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "182",
    treeType: 20,
    treeName: "용어",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "129",
    treeType: 20,
    treeName: "PHP",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "133",
    treeType: 20,
    treeName: "Cypress",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "134",
    treeType: 20,
    treeName: "node.js",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "135",
    treeType: 20,
    treeName: "inversify + typescript",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "215",
    treeType: 20,
    treeName: "Redux",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "216",
    treeType: 20,
    treeName: "Firebase",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "217",
    treeType: 20,
    treeName: "netlify",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "406",
    treeType: 20,
    treeName: "SWC",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "409",
    treeType: 20,
    treeName: "Webpack",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "441",
    treeType: 20,
    treeName: "쿠키/세션/토큰",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "554",
    treeType: 20,
    treeName: "docker",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "579",
    treeType: 20,
    treeName: "zsh",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "1090",
    treeType: 20,
    treeName: "NVM",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "1109",
    treeType: 20,
    treeName: "story book",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "479",
    treeType: 20,
    treeName: "Go란",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "483",
    treeType: 20,
    treeName: "oAuth란",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "475",
    treeType: 20,
    treeName: "스벨트란",
    treePath: "",
    treeChildren: [],
  },
  {
    treeId: "477",
    treeType: 20,
    treeName: "Flutter란",
    treePath: "",
    treeChildren: [],
  },
];

export default mockData;
